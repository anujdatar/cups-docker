name: Integration Testing

on:
  workflow_call:

jobs:

  build-test-image:
    name: Build Image for Testing & Scanning
    runs-on: ubuntu-latest

    steps:

      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: 'image=moby/buildkit:v0.10.5'

      - name: Login to ghcr.io registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push to GHCR
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/anujdatar/cups-docker:${{ github.run_id }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

  smoke-test-docker:
    name: Smoke test image in Docker Compose
    runs-on: ubuntu-latest
    needs: [build-test-image]

    steps:

      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Login to ghcr.io registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Smoke test in Docker Compose
        run: |
          export TESTING_IMAGE="${{ github.run_id }}"
          echo "This is where we will do a smoke test in Docker"
        # docker compose -f docker-compose.yml up --exit-code-from test

  smoke-test-k8s:
    name: Smoke test image in Docker Kubernetes
    runs-on: ubuntu-latest
    needs: [build-test-image]

    steps:

      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Login to ghcr.io registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create temporary k3d cluster
        uses: AbsaOSS/k3d-action@v2
        with:
          cluster-name: "test-cluster-1"
          args: >-
            --agents 1
            --no-lb
            --k3s-arg "--no-deploy=traefik,servicelb,metrics-server@server:*"

      - name: Smoke test in k3d cluster
        run: |
          kubectl create secret docker-registry regcred \
            --docker-server=https://ghcr.io \
            --docker-username=${{ github.actor }} \
            --docker-password=${{ secrets.GITHUB_TOKEN }}
          echo "TESTING_IMAGE=ghcr.io/irish1986/python-test:${{ github.run_id }}"
        # envsubst < manifests/deployment.yaml  | kubectl apply -f -
        # kubectl rollout status deployment myapp
        # kubectl exec deploy/myapp -- curl --fail localhost

  scan-image:
    name: Scan Image with Trivy
    runs-on: ubuntu-latest
    needs: [smoke-test-docker, smoke-test-k8s]

    steps:

      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Login to ghcr.io registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image to scan
        run: docker pull ghcr.io/irish1986/python-test:${{ github.run_id }}

      - name: Run Trivy for HIGH,CRITICAL CVEs and report (blocking)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/irish1986/python-test:${{ github.run_id }}
          exit-code: 0
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL'
          format: 'sarif'
          output: 'results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
          category: results
